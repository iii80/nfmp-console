#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var http = require('http');
var async = require('async');
var port = require('../lib/port.lib.js')();
var logger = require('../lib/logger.lib');
var hardware = require('../core/controllers/hardware.controller');

/**
 * 设置端口
 */
app.set('port', port);

/**
 * 创建 HTTP 服务器
 */
var server = http.createServer(app);
var io = require('socket.io').listen(server);

/**
 * 监听端口
 */
server.listen(port);

server.on('error', function (error) {
  if (error.syscall !== 'listen') throw error;

  var bind = typeof port === 'string' ? 'pipe ' + port : 'port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      logger.system().error(bind + ' 需要有更高的权限');
      process.exit(1);

      break;
    case 'EADDRINUSE':
      logger.system().error(bind + ' 已被使用');
      process.exit(1);

      break;
    default:
      throw error;
  }
});

server.on('listening', function () {
  var addr = server.address();

  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;

  logger.system().info('正在监听 ' + bind);
});

io.sockets.on('connection', function (socket) {
  hardware.information(socket);

  socket.on('disconnect', function () {
    hardware.disconnect();
  });
});